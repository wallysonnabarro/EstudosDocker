services:
  api:
    container_name: estudos-api
    build:
      dockerfile: Dockerfile
      context: .
    ports:
      - 4652:8080
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on: 
      - "rabbitmq"
      - "sqldata"
    networks:
      - estudos-networks     

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - estudos-networks
    command: >
      sh -c "rabbitmq-server &
      rabbitmqctl add_vhost / &&
      rabbitmqctl set_permissions -p / estudos-user '.*' '.*' '.*' &&
      rabbitmqctl set_user_tags estudos-user administrator &&
      rabbitmqctl delete_user guest"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 30s
      
  sqldata:
    image: mcr.microsoft.com/mssql/server:2022-preview-ubuntu-22.04
    container_name: 'sqldata'
    environment:
      - MSSQL_SA_PASSWORD=Livros123@Estudos
      - ACCEPT_EULA=Y
      - MSSQL_PID=Evaluation
    ports:
      - "5434:1433"
    volumes:
      - "livros-bd-mssql-server:/var/opt/mssql"
    networks:
      - estudos-networks
      
volumes:
  livros-bd-mssql-server:        

networks:
  estudos-networks:
    driver: bridge